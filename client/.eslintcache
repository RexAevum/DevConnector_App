[{"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\index.js":"1","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\App.js":"2","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reportWebVitals.js":"3","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\layout\\Landing.js":"4","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\layout\\Navbar.js":"5","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\auth\\Login.js":"6","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\auth\\Register.js":"7","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\store.js":"8","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reducers\\index.js":"9","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reducers\\alert.js":"10","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\actions\\types.js":"11","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\actions\\alert.js":"12","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\layout\\Alert.js":"13","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\actions\\auth.js":"14","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reducers\\auth.js":"15","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\utils\\setAuthToken.js":"16","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\dashboard\\Dashboard.js":"17","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\routing\\PrivateRoute.js":"18","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reducers\\profile.js":"19","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\actions\\profile.js":"20","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\layout\\Spinner.js":"21","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile-forms\\CreateProfile.js":"22","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\dashboard\\DashboardActions.js":"23","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile-forms\\EditProfile.js":"24","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile-forms\\AddExperience.js":"25","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile-forms\\AddEducation.js":"26","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\dashboard\\Experience.js":"27","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\dashboard\\Education.js":"28","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profiles\\Profiles.js":"29","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profiles\\ProfileItem.js":"30","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\Profile.js":"31","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\ProfileTop.js":"32","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\ProfileAbout.js":"33","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\ProfileExperience.js":"34","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\ProfileEducation.js":"35"},{"size":478,"mtime":1610938100242,"results":"36","hashOfConfig":"37"},{"size":2533,"mtime":1611525323789,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"37"},{"size":1244,"mtime":1611277718497,"results":"40","hashOfConfig":"37"},{"size":1937,"mtime":1611454927273,"results":"41","hashOfConfig":"37"},{"size":2600,"mtime":1611110422220,"results":"42","hashOfConfig":"37"},{"size":5153,"mtime":1611110634067,"results":"43","hashOfConfig":"37"},{"size":589,"mtime":1611026043837,"results":"44","hashOfConfig":"37"},{"size":273,"mtime":1611269396204,"results":"45","hashOfConfig":"37"},{"size":679,"mtime":1611031920019,"results":"46","hashOfConfig":"37"},{"size":757,"mtime":1611373593303,"results":"47","hashOfConfig":"37"},{"size":559,"mtime":1611036639084,"results":"48","hashOfConfig":"37"},{"size":593,"mtime":1611036189090,"results":"49","hashOfConfig":"37"},{"size":3467,"mtime":1611285326153,"results":"50","hashOfConfig":"37"},{"size":1917,"mtime":1611367192138,"results":"51","hashOfConfig":"37"},{"size":406,"mtime":1611103750141,"results":"52","hashOfConfig":"37"},{"size":2449,"mtime":1611459892264,"results":"53","hashOfConfig":"37"},{"size":998,"mtime":1611269197435,"results":"54","hashOfConfig":"37"},{"size":1587,"mtime":1611704634783,"results":"55","hashOfConfig":"37"},{"size":8068,"mtime":1611549262556,"results":"56","hashOfConfig":"37"},{"size":275,"mtime":1611281095627,"results":"57","hashOfConfig":"37"},{"size":7567,"mtime":1611529103611,"results":"58","hashOfConfig":"37"},{"size":703,"mtime":1611350491673,"results":"59","hashOfConfig":"37"},{"size":8788,"mtime":1611707649636,"results":"60","hashOfConfig":"37"},{"size":4566,"mtime":1611460061379,"results":"61","hashOfConfig":"37"},{"size":4548,"mtime":1611460050665,"results":"62","hashOfConfig":"37"},{"size":1817,"mtime":1611367417799,"results":"63","hashOfConfig":"37"},{"size":1833,"mtime":1611367831334,"results":"64","hashOfConfig":"37"},{"size":1565,"mtime":1611524524843,"results":"65","hashOfConfig":"37"},{"size":1195,"mtime":1611540350979,"results":"66","hashOfConfig":"37"},{"size":2904,"mtime":1611709432828,"results":"67","hashOfConfig":"37"},{"size":3117,"mtime":1611549693276,"results":"68","hashOfConfig":"37"},{"size":1569,"mtime":1611707745371,"results":"69","hashOfConfig":"37"},{"size":1022,"mtime":1611710087811,"results":"70","hashOfConfig":"37"},{"size":945,"mtime":1611710071074,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1fe1jv8",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\index.js",[],["152","153"],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\App.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reportWebVitals.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\layout\\Landing.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\layout\\Navbar.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\auth\\Login.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\auth\\Register.js",["154"],"import React from 'react';\r\nimport { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\n// used for reducer\r\nimport { connect } from 'react-redux';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = (props) => {\r\n    // formData = defines a state (const state = {{state: \"fasef\"}})\r\n    // setFormData = sets the data in the state (this.state.x)\r\n    // Define state\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    // pull date from the state form\r\n    const {name, email, password, password2} = formData;\r\n\r\n    // @param   Event\r\n    // @desc    Takes in an event and will update the formDate (object state)\r\n    const onChange = (e) => {\r\n        // setFormData - update the formData\r\n        // ...formDate - copy the form, since only one field changes\r\n        // [e.target.name] - will return the name of the object that called the event (name=\"x\" --> x.taget.name : x.target.value)\r\n        setFormData({ ...formData, [e.target.name] : e.target.value});\r\n    };\r\n\r\n    //\r\n    const onSubmit = async(e) => {\r\n        // prevent the submit\r\n        e.preventDefault();\r\n        // check if passwords match\r\n        if (password !== password2){\r\n            props.setAlert('Passwords do not match', 'danger'); // second varible responds to css\r\n        }else{\r\n            // register user if all info is provided and passwrods match\r\n            props.register({ name, email, password }); // info is from form\r\n\r\n            // // create a new user without redux\r\n            // const newUser = {\r\n            //     name: name,\r\n            //     email: email,\r\n            //     password: password2\r\n            // };\r\n\r\n            // // try to update user in db\r\n            // try {\r\n            //     // set up the header for the request\r\n            //     const config = {\r\n            //         headers: {\r\n            //             \"Content-Type\" : \"application/json\"\r\n            //         }\r\n            //     };\r\n\r\n            //     // set up the body by creating a json file\r\n            //     const body = JSON.stringify(newUser);\r\n\r\n            //     // make a post request to save new user to db\r\n            //     const res = await axios.post('/api/users', body, config)\r\n            //     console.log(res.data); // returns the server response\r\n            // } catch (error) {\r\n            //     console.error(error.response.data);\r\n            // }\r\n        }\r\n    };\r\n\r\n    // redirect\r\n    if (props.isAuthenticated){\r\n        return (<Redirect to=\"/dashboard\" />);\r\n    }\r\n\r\n    return (\r\n    <Fragment>\r\n            <h1 className=\"large text-primary\">Sign Up</h1>\r\n        <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n        <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n            <div className=\"form-group\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={e => onChange(e)}\r\n                     \r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input \r\n                    type=\"email\" \r\n                    placeholder=\"Email Address\" \r\n                    name=\"email\" \r\n                    value={email}\r\n                    onChange={e => onChange(e)} \r\n                    \r\n                />\r\n                <small className=\"form-text\"\r\n                    >This site uses Gravatar so if you want a profile image, use a\r\n                    Gravatar email</small\r\n                >\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    minLength=\"0\"\r\n                    value={password}\r\n                    onChange={e => onChange(e)}\r\n                    \r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                name=\"password2\"\r\n                minLength=\"0\"\r\n                value={password2}\r\n                onChange={e => onChange(e)}\r\n                \r\n            />\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n        </form>\r\n        <p className=\"my-1\">\r\n            Already have an account? <Link to=\"/login\">Sign In</Link>\r\n        </p>\r\n    </Fragment>\r\n    );\r\n};\r\n\r\n// set props\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\store.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reducers\\index.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reducers\\alert.js",["155"],"// import action types\r\nimport { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n// set up an inital state\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action){\r\n    // destructure the action\r\n    const { type, payload } = action;\r\n    \r\n    switch (type) {\r\n        case SET_ALERT:\r\n            // add the alert to the already existing state (initialState)\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            // remove an alert from the state based on the alert id, which is passed using action\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\actions\\types.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\actions\\alert.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\layout\\Alert.js",["156"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n// constuct the alert notification to be displayed\r\nconst Alert = ({ alerts }) => (\r\n      alerts !== null && alerts.length > 0 && alerts.map(alert => (\r\n        <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n          {alert.msg}\r\n        </div>\r\n      ))\r\n\r\n  );\r\n\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    alerts: state.alert\r\n})\r\n\r\nexport default connect(mapStateToProps)(Alert);","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\actions\\auth.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reducers\\auth.js",["157"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT,\r\n    DELETED_ACCOUNT\r\n} from '../actions/types';\r\n\r\n// set the inital state \r\nconst initialState = {\r\n    token: localStorage.getItem('token'), // find the token in local storage\r\n    isAuthenticated: null, // allow access to the app\r\n    loading: true, // check if the app is waiting for anything to load\r\n    user: null // pass in user info\r\n};\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    // destructure action\r\n    const { type, payload } = action;\r\n    \r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            // set the token\r\n            localStorage.setItem('token', payload.token);\r\n            // updated the state\r\n            return {\r\n                ...state, // copy the existing state\r\n                ...payload, // copy the action payload\r\n                isAuthenticated: true, // set that the user has been authenticated\r\n                loading: false // loading is done\r\n            }\r\n        case REGISTER_FAIL: // all will do the same \r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case DELETED_ACCOUNT:\r\n            // if registration failed, remove the token\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state, // copy the current state\r\n                token: null, // set the token in the state to null\r\n                isAuthenticated: false, // user has not been authenticated\r\n                loading: false // not waiting for anything to load\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\utils\\setAuthToken.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\dashboard\\Dashboard.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\routing\\PrivateRoute.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reducers\\profile.js",["158"],"// Set up state managment for profile\r\n\r\nimport {\r\n    PROFILE_ERROR,\r\n    GET_PROFILE,\r\n    CLEAR_PROFILE,\r\n    UPDATE_PROFILE,\r\n    GET_PROFILES,\r\n    GET_REPOS\r\n} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    profile: null, // current logged in user and user that you are visiting \r\n    profiles: [], // all the user profiles that will be displayed\r\n    repos: [], // github repos will be placed here\r\n    loading: true, // check if it is waiting for anything\r\n    error: {} // return any errors\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    //\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false,\r\n            };\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            }\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false,\r\n                profile: null\r\n            };\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false\r\n            }\r\n        case GET_REPOS:\r\n            return {\r\n                type: GET_REPOS,\r\n                repos: payload,\r\n                loading: false \r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\actions\\profile.js",["159"],"import {\r\n    CLEAR_PROFILE,\r\n    DELETED_ACCOUNT,\r\n    GET_PROFILE,\r\n    GET_PROFILES,\r\n    GET_REPOS,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE\r\n} from './types';\r\nimport axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\n\r\n// Get current user profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    //\r\n    try {\r\n        // get user profile\r\n        const res = await axios.get('/api/profile/me');\r\n        // dsipatch that the user has been retrieved and send back user data\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            error: {\r\n                msg : error.response.statusText,\r\n                status: error.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// get all profiles\r\nexport const getAllProfiles = () => async dispatch => {\r\n    // clear out the current users profile \r\n    dispatch({ type: CLEAR_PROFILE});\r\n\r\n    //\r\n    try {\r\n        // get user profile\r\n        const res = await axios.get('/api/profile');\r\n        // dsipatch that the user has been retrieved and send back user data\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            error: {\r\n                msg : error.response.statusText,\r\n                status: error.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// get profile by id\r\nexport const getProfileById = (userId) => async dispatch => {\r\n    try {\r\n        // get user profile\r\n        const res = await axios.get(`/api/profile/user/${userId}`);\r\n        // dsipatch that the user has been retrieved and send back user data\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            error: {\r\n                msg : error.response.statusText,\r\n                status: error.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// get github repos\r\nexport const getGithubRepos = (username) => async dispatch => {\r\n    try {\r\n        // get user profile\r\n        const res = await axios.get(`/api/profile/github/${username}`);\r\n        // dsipatch that the user has been retrieved and send back user data\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            error: {\r\n                msg : error.response.statusText,\r\n                status: error.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Create or update profile\r\n// history -> will have a push method to redirect to a client side route\r\nexport const createOrUpdateProfile = (formData, history, edit = false) => async dispatch => {\r\n\r\n    try {\r\n        // set up header\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        };\r\n\r\n        // set up body -> formData\r\n        // make a request\r\n        console.log(formData)\r\n        const res = await axios.post('/api/profile', formData, config);\r\n\r\n        //\r\n        if (!edit){\r\n            dispatch({\r\n                type: GET_PROFILE,\r\n                payload: res.data\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type: UPDATE_PROFILE,\r\n                payload: res.data\r\n            })\r\n        }\r\n\r\n        dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", 'success'));\r\n        // If a new profile is created, forward user to dashboard\r\n        history.push('/dashboard');\r\n\r\n    } catch (error) {\r\n        // Print errors on the webapp page\r\n        const errors = error.response.data.errors;\r\n\r\n        if (errors){\r\n            errors.forEach(e => dispatch(setAlert(e.msg, 'danger')));\r\n        }\r\n        // if error setting profile\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            error : {\r\n                msg : error.response.statusText,\r\n                status: error.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Add experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        // create header\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n        // send put request to update exp\r\n        const res = await axios.put('api/profile/experience', formData, config);\r\n        // dispatch results - the json file that's returned from server\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        // dipatch a confirmation message to user\r\n        dispatch (setAlert('Experience Updated', 'success'));\r\n        // redirect\r\n        history.push('/dashboard');\r\n    } catch (error) {\r\n        // print to user any errors returned from server\r\n        const errors = error.response.data.errors;\r\n        errors.forEach(e => dispatch(setAlert(e.msg, 'danger')));\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR\r\n        })\r\n    }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        };\r\n\r\n        const res = await axios.put('/api/profile/education', formData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Education Added', 'success'));\r\n        history.push('/dashboard');\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        errors.forEach(e => dispatch(setAlert(e.msg, 'danger')));\r\n        dispatch({\r\n            type: PROFILE_ERROR\r\n        })\r\n    }\r\n\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        // alert user\r\n        dispatch(setAlert('Experience Removed', 'success'));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: error.response.statusText,\r\n                status: error.response.status\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteEducation = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        // alert user\r\n        dispatch(setAlert('Education Removed', 'success'));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: error.response.statusText,\r\n                status: error.response.status\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\n// Delete account and profile\r\nexport const deleteAccount = () => async dispatch => {\r\n    // Trigger a warning on the browser window to make sure user wants to delete\r\n    if (window.confirm('Are you sure tha you wish to delete your account?\\nThis action is permanent and cannot be undone!')){\r\n        try {\r\n            const res = await axios.delete(`/api/profile/`);\r\n    \r\n            dispatch({ type: CLEAR_PROFILE }); // delete user profile\r\n            dispatch({ type: DELETED_ACCOUNT }); // delete user account\r\n\r\n            // alert user\r\n            dispatch(setAlert('Your Account Has Been Permanantly Deleted'));\r\n        } catch (error) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: {\r\n                    msg: error.response.statusText,\r\n                    status: error.response.status\r\n                }\r\n            })\r\n        }\r\n    }\r\n    \r\n    \r\n};","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\layout\\Spinner.js",["160"],"import React, { Fragment } from 'react';\r\nimport spinner from '../../img/spinner.gif';\r\n\r\nexport default () => {\r\n    return(\r\n    <Fragment>\r\n        <img src={spinner} style={{width: '100px', margin: 'auto', display: 'block'}} alt=\"Loading...\"/>\r\n    </Fragment>\r\n    )\r\n};","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\dashboard\\DashboardActions.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile-forms\\EditProfile.js",["161"],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile-forms\\AddExperience.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile-forms\\AddEducation.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\dashboard\\Experience.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\dashboard\\Education.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profiles\\Profiles.js",["162"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getAllProfiles } from '../../actions/profile';\r\nimport profile from '../../reducers/profile';\r\nimport ProfileItem from './ProfileItem';\r\n\r\nconst Profiles = ({ getAllProfiles, profile: { profiles, loading } }) => {\r\n    useEffect( () => {\r\n        getAllProfiles();\r\n    }, [getAllProfiles]);\r\n    \r\n    return (\r\n        <Fragment>\r\n            { loading ? <Spinner /> : <Fragment>\r\n                <h1 className=\"large text-primary\">Developers</h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fab fa-connectdevelop\" /> Browse And Connect With Other Developers    \r\n                </p>\r\n                <div className=\"profiles\">\r\n                    {profiles.length > 0 ? (\r\n                        profiles.map(profile => (\r\n                            <Fragment>\r\n                                <p><ProfileItem key={profile._id} profile={profile} /></p>\r\n                            </Fragment>\r\n                        ))\r\n                    ) : <Fragment><h4>No profiles found</h4></Fragment>}\r\n                </div>    \r\n            </Fragment>}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfiles.propTypes = {\r\n    getAllProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAllProfiles })(Profiles);\r\n","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profiles\\ProfileItem.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\Profile.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\ProfileTop.js",["163"],"import PropTypes from 'prop-types';\r\nimport React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ProfileTop = ({ profile: {\r\n    status,\r\n    company,\r\n    website,\r\n    location,\r\n    social,\r\n    user: { name, avatar }\r\n}}) => {\r\n    // if no social media accounts are added, return empty string\r\n    if (typeof(social) == 'undefined') {\r\n        social = {\r\n            youtube: '',\r\n            twitter: '',\r\n            facebook: '',\r\n            linkedin: '',\r\n            instagram: '',\r\n            handshake: ''\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {/*<!-- Top --> */}\r\n            <div class=\"profile-top bg-primary p-2\">\r\n                <img\r\n                    class=\"round-img my-1\"\r\n                    src={avatar}\r\n                    alt=\"\"\r\n                />\r\n                <h1 class=\"large\">{name}</h1>\r\n                <p class=\"lead\">{status} {company && <span>at {company}</span>}</p>\r\n                <p>{location && <span>{location}</span>}</p>\r\n                <div class=\"icons my-1\">\r\n                    { website && (\r\n                        <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i class=\"fas fa-globe fa-2x\"></i>\r\n                        </a>\r\n                    )}\r\n                    { social.twitter && (\r\n                        <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i class=\"fab fa-twitter fa-2x\"></i>\r\n                        </a>\r\n                    )}\r\n                    { social.facebook && (\r\n                        <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i class=\"fab fa-facebook fa-2x\"></i>\r\n                        </a>\r\n                    )}\r\n                    { social.linkedIn && (\r\n                        <a href={social.linkedIn} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i class=\"fab fa-linkedin fa-2x\"></i>\r\n                        </a>\r\n                    )}\r\n    \r\n                    { social.youtube && (\r\n                        <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i class=\"fab fa-youtube fa-2x\"></i>\r\n                        </a>\r\n                    )}\r\n                    { social.instagram && (\r\n                        <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i class=\"fab fa-instagram fa-2x\"></i>\r\n                        </a>\r\n                    )}\r\n\r\n                    { social.handshake && (\r\n                        <a href={social.handshake} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i class=\"fas fa-handshake fa-2x\"></i>\r\n                        </a>\r\n                    )}\r\n\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfileTop.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\n\r\nexport default connect()(ProfileTop);\r\n","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\ProfileAbout.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\ProfileExperience.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\ProfileEducation.js",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":4,"column":8,"nodeType":"170","messageId":"171","endLine":4,"endColumn":13},{"ruleId":"172","severity":1,"message":"173","line":6,"column":1,"nodeType":"174","endLine":20,"endColumn":2},{"ruleId":"168","severity":1,"message":"175","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":21,"column":1,"nodeType":"174","endLine":60,"endColumn":2},{"ruleId":"172","severity":1,"message":"173","line":21,"column":1,"nodeType":"174","endLine":62,"endColumn":2},{"ruleId":"168","severity":1,"message":"176","line":265,"column":19,"nodeType":"170","messageId":"171","endLine":265,"endColumn":22},{"ruleId":"172","severity":1,"message":"177","line":4,"column":1,"nodeType":"174","endLine":10,"endColumn":3},{"ruleId":"178","severity":1,"message":"179","line":44,"column":10,"nodeType":"180","endLine":44,"endColumn":47,"suggestions":"181"},{"ruleId":"168","severity":1,"message":"182","line":6,"column":8,"nodeType":"170","messageId":"171","endLine":6,"endColumn":15},{"ruleId":"168","severity":1,"message":"183","line":3,"column":10,"nodeType":"170","messageId":"171","endLine":3,"endColumn":14},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Component' is defined but never used.","'res' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialState'. Either include it or remove the dependency array.","ArrayExpression",["186"],"'profile' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},"Update the dependencies array to be: [loading, getCurrentProfile, profile, initialState]",{"range":"189","text":"190"},[1626,1663],"[loading, getCurrentProfile, profile, initialState]"]