[{"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\index.js":"1","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\App.js":"2","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reportWebVitals.js":"3","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\layout\\Landing.js":"4","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\layout\\Navbar.js":"5","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\auth\\Login.js":"6","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\auth\\Register.js":"7","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\store.js":"8","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reducers\\index.js":"9","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reducers\\alert.js":"10","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\actions\\types.js":"11","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\actions\\alert.js":"12","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\layout\\Alert.js":"13","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\actions\\auth.js":"14","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reducers\\auth.js":"15","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\utils\\setAuthToken.js":"16","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\dashboard\\Dashboard.js":"17","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\routing\\PrivateRoute.js":"18","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reducers\\profile.js":"19","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\actions\\profile.js":"20","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\layout\\Spinner.js":"21","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile-forms\\CreateProfile.js":"22","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\dashboard\\DashboardActions.js":"23","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile-forms\\EditProfile.js":"24","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile-forms\\AddExperience.js":"25","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile-forms\\AddEducation.js":"26","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\dashboard\\Experience.js":"27","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\dashboard\\Education.js":"28","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profiles\\Profiles.js":"29","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profiles\\ProfileItem.js":"30","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\Profile.js":"31","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\ProfileTop.js":"32","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\ProfileAbout.js":"33","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\ProfileExperience.js":"34","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\ProfileEducation.js":"35","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\ProfileGithub.js":"36","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reducers\\post.js":"37","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\posts\\Posts.js":"38","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\actions\\post.js":"39","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\posts\\PostItem.js":"40","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\posts\\PostForm.js":"41","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\post\\Post.js":"42","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\post\\CommentForm.js":"43","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\post\\CommentItem.js":"44","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\layout\\NotFound.js":"45"},{"size":478,"mtime":1610938100242,"results":"46","hashOfConfig":"47"},{"size":2969,"mtime":1611891913844,"results":"48","hashOfConfig":"47"},{"size":362,"mtime":499162500000,"results":"49","hashOfConfig":"47"},{"size":1244,"mtime":1611277718497,"results":"50","hashOfConfig":"47"},{"size":2649,"mtime":1611973056145,"results":"51","hashOfConfig":"47"},{"size":2600,"mtime":1611110422220,"results":"52","hashOfConfig":"47"},{"size":5153,"mtime":1611110634067,"results":"53","hashOfConfig":"47"},{"size":589,"mtime":1611026043837,"results":"54","hashOfConfig":"47"},{"size":312,"mtime":1611718042729,"results":"55","hashOfConfig":"47"},{"size":679,"mtime":1611031920019,"results":"56","hashOfConfig":"47"},{"size":1136,"mtime":1611973968688,"results":"57","hashOfConfig":"47"},{"size":559,"mtime":1611036639084,"results":"58","hashOfConfig":"47"},{"size":593,"mtime":1611036189090,"results":"59","hashOfConfig":"47"},{"size":3452,"mtime":1611967990873,"results":"60","hashOfConfig":"47"},{"size":1917,"mtime":1611367192138,"results":"61","hashOfConfig":"47"},{"size":406,"mtime":1611103750141,"results":"62","hashOfConfig":"47"},{"size":2482,"mtime":1611879371448,"results":"63","hashOfConfig":"47"},{"size":998,"mtime":1611269197435,"results":"64","hashOfConfig":"47"},{"size":1614,"mtime":1611713402777,"results":"65","hashOfConfig":"47"},{"size":8068,"mtime":1611549262556,"results":"66","hashOfConfig":"47"},{"size":275,"mtime":1611281095627,"results":"67","hashOfConfig":"47"},{"size":7860,"mtime":1611969837213,"results":"68","hashOfConfig":"47"},{"size":703,"mtime":1611350491673,"results":"69","hashOfConfig":"47"},{"size":9080,"mtime":1611969818805,"results":"70","hashOfConfig":"47"},{"size":4566,"mtime":1611460061379,"results":"71","hashOfConfig":"47"},{"size":4548,"mtime":1611460050665,"results":"72","hashOfConfig":"47"},{"size":1811,"mtime":1611973769048,"results":"73","hashOfConfig":"47"},{"size":1830,"mtime":1611973755987,"results":"74","hashOfConfig":"47"},{"size":1565,"mtime":1611524524843,"results":"75","hashOfConfig":"47"},{"size":1243,"mtime":1611969195717,"results":"76","hashOfConfig":"47"},{"size":3100,"mtime":1611710515486,"results":"77","hashOfConfig":"47"},{"size":3222,"mtime":1611973287733,"results":"78","hashOfConfig":"47"},{"size":1569,"mtime":1611707745371,"results":"79","hashOfConfig":"47"},{"size":1022,"mtime":1611710087811,"results":"80","hashOfConfig":"47"},{"size":945,"mtime":1611710071074,"results":"81","hashOfConfig":"47"},{"size":2082,"mtime":1611717251438,"results":"82","hashOfConfig":"47"},{"size":2129,"mtime":1611881051633,"results":"83","hashOfConfig":"47"},{"size":1386,"mtime":1611968769342,"results":"84","hashOfConfig":"47"},{"size":4525,"mtime":1611880831947,"results":"85","hashOfConfig":"47"},{"size":3081,"mtime":1611881734431,"results":"86","hashOfConfig":"47"},{"size":1380,"mtime":1611968593487,"results":"87","hashOfConfig":"47"},{"size":1308,"mtime":1611882225903,"results":"88","hashOfConfig":"47"},{"size":1394,"mtime":1611881763162,"results":"89","hashOfConfig":"47"},{"size":1975,"mtime":1611886614702,"results":"90","hashOfConfig":"47"},{"size":561,"mtime":1611893734930,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1fe1jv8",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"94"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\index.js",[],["196","197"],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\App.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reportWebVitals.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\layout\\Landing.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\layout\\Navbar.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\auth\\Login.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\auth\\Register.js",["198"],"import React from 'react';\r\nimport { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\n// used for reducer\r\nimport { connect } from 'react-redux';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = (props) => {\r\n    // formData = defines a state (const state = {{state: \"fasef\"}})\r\n    // setFormData = sets the data in the state (this.state.x)\r\n    // Define state\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    // pull date from the state form\r\n    const {name, email, password, password2} = formData;\r\n\r\n    // @param   Event\r\n    // @desc    Takes in an event and will update the formDate (object state)\r\n    const onChange = (e) => {\r\n        // setFormData - update the formData\r\n        // ...formDate - copy the form, since only one field changes\r\n        // [e.target.name] - will return the name of the object that called the event (name=\"x\" --> x.taget.name : x.target.value)\r\n        setFormData({ ...formData, [e.target.name] : e.target.value});\r\n    };\r\n\r\n    //\r\n    const onSubmit = async(e) => {\r\n        // prevent the submit\r\n        e.preventDefault();\r\n        // check if passwords match\r\n        if (password !== password2){\r\n            props.setAlert('Passwords do not match', 'danger'); // second varible responds to css\r\n        }else{\r\n            // register user if all info is provided and passwrods match\r\n            props.register({ name, email, password }); // info is from form\r\n\r\n            // // create a new user without redux\r\n            // const newUser = {\r\n            //     name: name,\r\n            //     email: email,\r\n            //     password: password2\r\n            // };\r\n\r\n            // // try to update user in db\r\n            // try {\r\n            //     // set up the header for the request\r\n            //     const config = {\r\n            //         headers: {\r\n            //             \"Content-Type\" : \"application/json\"\r\n            //         }\r\n            //     };\r\n\r\n            //     // set up the body by creating a json file\r\n            //     const body = JSON.stringify(newUser);\r\n\r\n            //     // make a post request to save new user to db\r\n            //     const res = await axios.post('/api/users', body, config)\r\n            //     console.log(res.data); // returns the server response\r\n            // } catch (error) {\r\n            //     console.error(error.response.data);\r\n            // }\r\n        }\r\n    };\r\n\r\n    // redirect\r\n    if (props.isAuthenticated){\r\n        return (<Redirect to=\"/dashboard\" />);\r\n    }\r\n\r\n    return (\r\n    <Fragment>\r\n            <h1 className=\"large text-primary\">Sign Up</h1>\r\n        <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n        <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n            <div className=\"form-group\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={e => onChange(e)}\r\n                     \r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input \r\n                    type=\"email\" \r\n                    placeholder=\"Email Address\" \r\n                    name=\"email\" \r\n                    value={email}\r\n                    onChange={e => onChange(e)} \r\n                    \r\n                />\r\n                <small className=\"form-text\"\r\n                    >This site uses Gravatar so if you want a profile image, use a\r\n                    Gravatar email</small\r\n                >\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    minLength=\"0\"\r\n                    value={password}\r\n                    onChange={e => onChange(e)}\r\n                    \r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                name=\"password2\"\r\n                minLength=\"0\"\r\n                value={password2}\r\n                onChange={e => onChange(e)}\r\n                \r\n            />\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n        </form>\r\n        <p className=\"my-1\">\r\n            Already have an account? <Link to=\"/login\">Sign In</Link>\r\n        </p>\r\n    </Fragment>\r\n    );\r\n};\r\n\r\n// set props\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\store.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reducers\\index.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reducers\\alert.js",["199"],"// import action types\r\nimport { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n// set up an inital state\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action){\r\n    // destructure the action\r\n    const { type, payload } = action;\r\n    \r\n    switch (type) {\r\n        case SET_ALERT:\r\n            // add the alert to the already existing state (initialState)\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            // remove an alert from the state based on the alert id, which is passed using action\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\actions\\types.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\actions\\alert.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\layout\\Alert.js",["200"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n// constuct the alert notification to be displayed\r\nconst Alert = ({ alerts }) => (\r\n      alerts !== null && alerts.length > 0 && alerts.map(alert => (\r\n        <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n          {alert.msg}\r\n        </div>\r\n      ))\r\n\r\n  );\r\n\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    alerts: state.alert\r\n})\r\n\r\nexport default connect(mapStateToProps)(Alert);","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\actions\\auth.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reducers\\auth.js",["201"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT,\r\n    DELETED_ACCOUNT\r\n} from '../actions/types';\r\n\r\n// set the inital state \r\nconst initialState = {\r\n    token: localStorage.getItem('token'), // find the token in local storage\r\n    isAuthenticated: null, // allow access to the app\r\n    loading: true, // check if the app is waiting for anything to load\r\n    user: null // pass in user info\r\n};\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    // destructure action\r\n    const { type, payload } = action;\r\n    \r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            // set the token\r\n            localStorage.setItem('token', payload.token);\r\n            // updated the state\r\n            return {\r\n                ...state, // copy the existing state\r\n                ...payload, // copy the action payload\r\n                isAuthenticated: true, // set that the user has been authenticated\r\n                loading: false // loading is done\r\n            }\r\n        case REGISTER_FAIL: // all will do the same \r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case DELETED_ACCOUNT:\r\n            // if registration failed, remove the token\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state, // copy the current state\r\n                token: null, // set the token in the state to null\r\n                isAuthenticated: false, // user has not been authenticated\r\n                loading: false // not waiting for anything to load\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\utils\\setAuthToken.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\dashboard\\Dashboard.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\routing\\PrivateRoute.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reducers\\profile.js",["202"],"// Set up state managment for profile\r\n\r\nimport {\r\n    PROFILE_ERROR,\r\n    GET_PROFILE,\r\n    CLEAR_PROFILE,\r\n    UPDATE_PROFILE,\r\n    GET_PROFILES,\r\n    GET_REPOS\r\n} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    profile: null, // current logged in user and user that you are visiting \r\n    profiles: [], // all the user profiles that will be displayed\r\n    repos: [], // github repos will be placed here\r\n    loading: true, // check if it is waiting for anything\r\n    error: {} // return any errors\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    //\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false,\r\n            };\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            }\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false,\r\n                profile: null\r\n            };\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false\r\n            }\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                type: GET_REPOS,\r\n                repos: payload,\r\n                loading: false \r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\actions\\profile.js",["203"],"import {\r\n    CLEAR_PROFILE,\r\n    DELETED_ACCOUNT,\r\n    GET_PROFILE,\r\n    GET_PROFILES,\r\n    GET_REPOS,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE\r\n} from './types';\r\nimport axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\n\r\n// Get current user profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    //\r\n    try {\r\n        // get user profile\r\n        const res = await axios.get('/api/profile/me');\r\n        // dsipatch that the user has been retrieved and send back user data\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            error: {\r\n                msg : error.response.statusText,\r\n                status: error.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// get all profiles\r\nexport const getAllProfiles = () => async dispatch => {\r\n    // clear out the current users profile \r\n    dispatch({ type: CLEAR_PROFILE});\r\n\r\n    //\r\n    try {\r\n        // get user profile\r\n        const res = await axios.get('/api/profile');\r\n        // dsipatch that the user has been retrieved and send back user data\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            error: {\r\n                msg : error.response.statusText,\r\n                status: error.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// get profile by id\r\nexport const getProfileById = (userId) => async dispatch => {\r\n    try {\r\n        // get user profile\r\n        const res = await axios.get(`/api/profile/user/${userId}`);\r\n        // dsipatch that the user has been retrieved and send back user data\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            error: {\r\n                msg : error.response.statusText,\r\n                status: error.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// get github repos\r\nexport const getGithubRepos = (username) => async dispatch => {\r\n    try {\r\n        // get user profile\r\n        const res = await axios.get(`/api/profile/github/${username}`);\r\n        // dsipatch that the user has been retrieved and send back user data\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            error: {\r\n                msg : error.response.statusText,\r\n                status: error.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Create or update profile\r\n// history -> will have a push method to redirect to a client side route\r\nexport const createOrUpdateProfile = (formData, history, edit = false) => async dispatch => {\r\n\r\n    try {\r\n        // set up header\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        };\r\n\r\n        // set up body -> formData\r\n        // make a request\r\n        console.log(formData)\r\n        const res = await axios.post('/api/profile', formData, config);\r\n\r\n        //\r\n        if (!edit){\r\n            dispatch({\r\n                type: GET_PROFILE,\r\n                payload: res.data\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type: UPDATE_PROFILE,\r\n                payload: res.data\r\n            })\r\n        }\r\n\r\n        dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", 'success'));\r\n        // If a new profile is created, forward user to dashboard\r\n        history.push('/dashboard');\r\n\r\n    } catch (error) {\r\n        // Print errors on the webapp page\r\n        const errors = error.response.data.errors;\r\n\r\n        if (errors){\r\n            errors.forEach(e => dispatch(setAlert(e.msg, 'danger')));\r\n        }\r\n        // if error setting profile\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            error : {\r\n                msg : error.response.statusText,\r\n                status: error.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Add experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        // create header\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n        // send put request to update exp\r\n        const res = await axios.put('api/profile/experience', formData, config);\r\n        // dispatch results - the json file that's returned from server\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        // dipatch a confirmation message to user\r\n        dispatch (setAlert('Experience Updated', 'success'));\r\n        // redirect\r\n        history.push('/dashboard');\r\n    } catch (error) {\r\n        // print to user any errors returned from server\r\n        const errors = error.response.data.errors;\r\n        errors.forEach(e => dispatch(setAlert(e.msg, 'danger')));\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR\r\n        })\r\n    }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        };\r\n\r\n        const res = await axios.put('/api/profile/education', formData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Education Added', 'success'));\r\n        history.push('/dashboard');\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        errors.forEach(e => dispatch(setAlert(e.msg, 'danger')));\r\n        dispatch({\r\n            type: PROFILE_ERROR\r\n        })\r\n    }\r\n\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        // alert user\r\n        dispatch(setAlert('Experience Removed', 'success'));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: error.response.statusText,\r\n                status: error.response.status\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteEducation = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        // alert user\r\n        dispatch(setAlert('Education Removed', 'success'));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: error.response.statusText,\r\n                status: error.response.status\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\n// Delete account and profile\r\nexport const deleteAccount = () => async dispatch => {\r\n    // Trigger a warning on the browser window to make sure user wants to delete\r\n    if (window.confirm('Are you sure tha you wish to delete your account?\\nThis action is permanent and cannot be undone!')){\r\n        try {\r\n            const res = await axios.delete(`/api/profile/`);\r\n    \r\n            dispatch({ type: CLEAR_PROFILE }); // delete user profile\r\n            dispatch({ type: DELETED_ACCOUNT }); // delete user account\r\n\r\n            // alert user\r\n            dispatch(setAlert('Your Account Has Been Permanantly Deleted'));\r\n        } catch (error) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: {\r\n                    msg: error.response.statusText,\r\n                    status: error.response.status\r\n                }\r\n            })\r\n        }\r\n    }\r\n    \r\n    \r\n};","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\layout\\Spinner.js",["204"],"import React, { Fragment } from 'react';\r\nimport spinner from '../../img/spinner.gif';\r\n\r\nexport default () => {\r\n    return(\r\n    <Fragment>\r\n        <img src={spinner} style={{width: '100px', margin: 'auto', display: 'block'}} alt=\"Loading...\"/>\r\n    </Fragment>\r\n    )\r\n};","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\dashboard\\DashboardActions.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile-forms\\EditProfile.js",["205"],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile-forms\\AddExperience.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile-forms\\AddEducation.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\dashboard\\Experience.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\dashboard\\Education.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profiles\\Profiles.js",["206"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getAllProfiles } from '../../actions/profile';\r\nimport profile from '../../reducers/profile';\r\nimport ProfileItem from './ProfileItem';\r\n\r\nconst Profiles = ({ getAllProfiles, profile: { profiles, loading } }) => {\r\n    useEffect( () => {\r\n        getAllProfiles();\r\n    }, [getAllProfiles]);\r\n    \r\n    return (\r\n        <Fragment>\r\n            { loading ? <Spinner /> : <Fragment>\r\n                <h1 className=\"large text-primary\">Developers</h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fab fa-connectdevelop\" /> Browse And Connect With Other Developers    \r\n                </p>\r\n                <div className=\"profiles\">\r\n                    {profiles.length > 0 ? (\r\n                        profiles.map(profile => (\r\n                            <Fragment>\r\n                                <p><ProfileItem key={profile._id} profile={profile} /></p>\r\n                            </Fragment>\r\n                        ))\r\n                    ) : <Fragment><h4>No profiles found</h4></Fragment>}\r\n                </div>    \r\n            </Fragment>}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfiles.propTypes = {\r\n    getAllProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAllProfiles })(Profiles);\r\n","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profiles\\ProfileItem.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\Profile.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\ProfileTop.js",["207","208","209"],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\ProfileAbout.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\ProfileExperience.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\ProfileEducation.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\profile\\ProfileGithub.js",["210","211"],"import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { getGithubRepos } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username);\r\n\r\n    }, [getGithubRepos])\r\n\r\n    // @TODO - get count of commits\r\n    return (\r\n        <Fragment>\r\n            <div className=\"profile-github\">\r\n                <h2 className=\"text-primary my-1\">\r\n                    <i className=\"fab fa-github\"></i> Github Repos\r\n                </h2>\r\n                {repos === null ? (<Spinner />) : (\r\n                    repos.map(repo => (\r\n                        <div key={repo._id} className=\"repo bg-white p-1 my-1\">\r\n                            <div>\r\n                            <h4><a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{repo.name}</a></h4>\r\n                            <p>\r\n                                {repo.description}\r\n                            </p>\r\n                            </div>\r\n                            <div>\r\n                            <ul>\r\n                                <li className=\"badge badge-primary\">Stars: {repo.stargazers_count}</li>\r\n                                <li className=\"badge badge-dark\">Watchers: {repo.watchers_count}</li>\r\n                                <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\r\n                            </ul>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                )\r\n                }\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n    username: PropTypes.string.isRequired,\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    repos: state.profile.repos\r\n})\r\nexport default connect(mapStateToProps, {getGithubRepos})(ProfileGithub);\r\n","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\reducers\\post.js",["212","213"],"import {\r\n    GET_POSTS,\r\n    POSTS_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT,\r\n    DELETE_COMMENT\r\n} from '../actions/types';\r\nconst initalState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function(state = initalState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            };\r\n        case GET_POST:\r\n            return {\r\n                ...state,\r\n                post: payload,\r\n                loading: false\r\n            }\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [payload, ...state.posts], // keep all of the old posts and add the new post\r\n                loading: false\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload), // drop the post with the passed ID from the state\r\n                loading: false\r\n            }\r\n        case POSTS_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post => post._id === payload.postId ? { ...post, likes: payload.likes } : post),\r\n                loading: false\r\n            }\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: { ...state.post, comments: payload},\r\n                loading: false\r\n            };\r\n        case DELETE_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: {\r\n                    ...state.post,\r\n                    comments: state.post.comments.filter(comment => payload !== comment._id)\r\n                },\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\posts\\Posts.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\actions\\post.js",["214","215"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { \r\n    DELETE_POST,\r\n    GET_POSTS,\r\n    POSTS_ERROR,\r\n    UPDATE_LIKES,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    DELETE_COMMENT\r\n } from './types';\r\n\r\n\r\n // Get posts\r\n export const getPosts = () => async dispatch => {\r\n     try {\r\n         // get posts\r\n         const res = await axios.get('/api/posts');\r\n\r\n         dispatch({\r\n             type: GET_POSTS,\r\n             payload: res.data\r\n         });\r\n     } catch (error) {\r\n         dispatch({\r\n             type: POSTS_ERROR,\r\n             payload: {msg: error.response.statusText, status: error.response.status}\r\n         });\r\n     }\r\n };\r\n\r\n  // Get a post\r\n  export const getPost = (id) => async dispatch => {\r\n    try {\r\n        // get specific post\r\n        const res = await axios.get(`/api/posts/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_POST,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POSTS_ERROR,\r\n            payload: {msg: error.response.statusText, status: error.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n // Add like\r\n export const addLike = (postId) => async dispatch => {\r\n     try {\r\n         // get posts\r\n         const res = await axios.put(`/api/posts/like/${postId}`);\r\n\r\n         dispatch({\r\n             type: UPDATE_LIKES,\r\n             payload: { postId, likes: res.data}\r\n         });\r\n     } catch (error) {\r\n         dispatch({\r\n             type: POSTS_ERROR,\r\n             payload: {msg: error.response.statusText, status: error.response.status}\r\n         });\r\n     }\r\n };\r\n\r\n  // Remove like\r\n  export const removeLike = (postId) => async dispatch => {\r\n    try {\r\n        // get posts\r\n        const res = await axios.put(`/api/posts/unlike/${postId}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { postId, likes: res.data}\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POSTS_ERROR,\r\n            payload: {msg: error.response.statusText, status: error.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n  // Delete post\r\n  export const deletePost = (id) => async dispatch => {\r\n    try {\r\n        // get posts\r\n        const res = await axios.delete(`/api/posts/${id}`);\r\n\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: id\r\n        });\r\n\r\n        dispatch(setAlert('Post Removed', 'success'));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POSTS_ERROR,\r\n            payload: {msg: error.response.statusText, status: error.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n  // Add post\r\n  export const addPost = (formData) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type' : 'application/json'\r\n        }\r\n    }\r\n\r\n    try {\r\n        // add post\r\n        const res = await axios.post(`/api/posts`, formData, config);\r\n\r\n        dispatch({\r\n            type: ADD_POST,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Post Created', 'success'));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POSTS_ERROR,\r\n            payload: {msg: error.response.statusText, status: error.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n  // Add comment\r\n  export const addComment = (postId, formData) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type' : 'application/json'\r\n        }\r\n    }\r\n\r\n    try {\r\n        // add a comment to a post\r\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\r\n\r\n        dispatch({\r\n            type: ADD_COMMENT,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Comment Added', 'success'));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POSTS_ERROR,\r\n            payload: {msg: error.response.statusText, status: error.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n  // Delete comment\r\n  export const deleteComment = (postId, commentId) => async dispatch => {\r\n    try {\r\n        // delete specific comment from a specific post\r\n        const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n        dispatch({\r\n            type: DELETE_COMMENT,\r\n            payload: commentId\r\n        });\r\n\r\n        dispatch(setAlert('Comment Removed', 'success'));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POSTS_ERROR,\r\n            payload: {msg: error.response.statusText, status: error.response.status}\r\n        });\r\n    }\r\n};","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\posts\\PostItem.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\posts\\PostForm.js",["216"],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\post\\Post.js",["217"],"import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getPost } from '../../actions/post';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\n\r\nconst Post = ({ getPost, post: {post, loading}, match }) => {\r\n    useEffect(() => {\r\n        getPost(match.params.id);\r\n    }, [getPost])\r\n    \r\n    return (\r\n        <div>\r\n            { loading || post === null ? <Spinner/> : <Fragment>\r\n                <Link to=\"/posts\" className=\"btn\">Back To Posts</Link>\r\n                <PostItem post={post} showActions={false} /> \r\n                <CommentForm postId={post._id}/>  \r\n                <div className=\"comments\">\r\n                    {post.comments.map(comment => \r\n                        <CommentItem key={comment._id} comment={comment} postId={post._id}/>        \r\n                    )}\r\n                </div>\r\n            </Fragment>}\r\n        </div>\r\n    )\r\n}\r\n\r\nPost.propTypes = {\r\n    getPost: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post)\r\n","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\post\\CommentForm.js",["218"],"import React, { useState, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/post';\r\n\r\n\r\nconst CommentForm = ({ addComment, postId }) => {\r\n    //\r\n    const [text, setText] = useState('');\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        addComment(postId, {text});\r\n        setText('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"post-form\">\r\n                <div className=\"bg-primary p\">\r\n                    <h3>Enter Your Comment Below...</h3>\r\n                </div>\r\n                <form className=\"form my-1\" onSubmit={(e) => onSubmit(e)}>\r\n                    <textarea\r\n                        name=\"text\"\r\n                        cols=\"30\"\r\n                        rows=\"5\"\r\n                        placeholder=\"Add A Comment...\"\r\n                        value={text}\r\n                        onChange={e => setText(e.target.value)}\r\n                        required\r\n                    ></textarea>\r\n                    <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    addComment: PropTypes.func.isRequired,\r\n    postId: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\post\\CommentItem.js",[],"S:\\JavaScript_Projects\\DevConnector_App\\client\\src\\components\\layout\\NotFound.js",["219"],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":4,"column":8,"nodeType":"226","messageId":"227","endLine":4,"endColumn":13},{"ruleId":"228","severity":1,"message":"229","line":6,"column":1,"nodeType":"230","endLine":20,"endColumn":2},{"ruleId":"224","severity":1,"message":"231","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"229","line":21,"column":1,"nodeType":"230","endLine":60,"endColumn":2},{"ruleId":"228","severity":1,"message":"229","line":21,"column":1,"nodeType":"230","endLine":63,"endColumn":2},{"ruleId":"224","severity":1,"message":"232","line":265,"column":19,"nodeType":"226","messageId":"227","endLine":265,"endColumn":22},{"ruleId":"228","severity":1,"message":"233","line":4,"column":1,"nodeType":"230","endLine":10,"endColumn":3},{"ruleId":"234","severity":1,"message":"235","line":44,"column":10,"nodeType":"236","endLine":44,"endColumn":47,"suggestions":"237"},{"ruleId":"224","severity":1,"message":"238","line":6,"column":8,"nodeType":"226","messageId":"227","endLine":6,"endColumn":15},{"ruleId":"224","severity":1,"message":"239","line":3,"column":10,"nodeType":"226","messageId":"227","endLine":3,"endColumn":14},{"ruleId":"240","severity":1,"message":"241","line":78,"column":36,"nodeType":"242","messageId":"243","endLine":78,"endColumn":38},{"ruleId":"240","severity":1,"message":"241","line":78,"column":47,"nodeType":"242","messageId":"243","endLine":78,"endColumn":49},{"ruleId":"224","severity":1,"message":"239","line":6,"column":10,"nodeType":"226","messageId":"227","endLine":6,"endColumn":14},{"ruleId":"234","severity":1,"message":"244","line":13,"column":8,"nodeType":"236","endLine":13,"endColumn":24,"suggestions":"245"},{"ruleId":"224","severity":1,"message":"246","line":9,"column":5,"nodeType":"226","messageId":"227","endLine":9,"endColumn":19},{"ruleId":"228","severity":1,"message":"229","line":19,"column":1,"nodeType":"230","endLine":77,"endColumn":2},{"ruleId":"224","severity":1,"message":"232","line":91,"column":15,"nodeType":"226","messageId":"227","endLine":91,"endColumn":18},{"ruleId":"224","severity":1,"message":"232","line":163,"column":15,"nodeType":"226","messageId":"227","endLine":163,"endColumn":18},{"ruleId":"224","severity":1,"message":"247","line":44,"column":7,"nodeType":"226","messageId":"227","endLine":44,"endColumn":22},{"ruleId":"234","severity":1,"message":"248","line":14,"column":8,"nodeType":"236","endLine":14,"endColumn":17,"suggestions":"249"},{"ruleId":"224","severity":1,"message":"250","line":1,"column":27,"nodeType":"226","messageId":"227","endLine":1,"endColumn":35},{"ruleId":"224","severity":1,"message":"251","line":2,"column":8,"nodeType":"226","messageId":"227","endLine":2,"endColumn":17},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Component' is defined but never used.","'res' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialState'. Either include it or remove the dependency array.","ArrayExpression",["254"],"'profile' is defined but never used.","'Link' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["255"],"'REMOVE_COMMENT' is defined but never used.","'mapStateToProps' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["256"],"'Fragment' is defined but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},"Update the dependencies array to be: [loading, getCurrentProfile, profile, initialState]",{"range":"263","text":"264"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"265","text":"266"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"267","text":"268"},[1626,1663],"[loading, getCurrentProfile, profile, initialState]",[407,423],"[getGithubRepos, username]",[517,526],"[getPost, match.params.id]"]